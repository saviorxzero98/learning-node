{
    "openapi": "3.0.0",
    "info": {
        "title": "User API",
        "description": "Simple RESTful API in Node.js with TypeScript",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Demo server"
        }
    ],
    "paths": {
        "/api/users": {
            "get": {
                "summary": "Return all users with list.",
                "description": "Return all existed users.",
                "responses": {
                    "200": {
                        "description": "A JSON array of user names",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new user.",
                "description": "Add a new user.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Add user success.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "summary": "Return the specific user.",
                "description": "Return the specific user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user id which wants to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON object of user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an user.",
                "description": "Update an user.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user id which wants to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update user success.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete an user.",
                "description": "Delete an user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user id which wants to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete user success.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Test"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "UserInput": {
                "properties": {
                    "id": {
                        "type": "int64",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Test"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            }
        }
    }
}